@model Battleships.Domain.Entities.Login

@{
    ViewBag.Title = "Login";
}
@if (ViewBag.GoodResult == null && ViewBag.BadResult == null)
{
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Please enter your username and password</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10 input-group">
                    <span class="btn btn-default input-group-addon">
                        <span class="glyphicon glyphicon-user"></span>
                    </span>
                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10 input-group">
                    <span class="btn btn-default input-group-addon">
                        <span class="glyphicon glyphicon-lock"></span>
                    </span>
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RememberMe, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.RememberMe)
                        @Html.ValidationMessageFor(model => model.RememberMe, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Login" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
}
@using (Html.BeginForm())
{

    if (ViewBag.GoodResult != null)
    {
        <div class="alert alert-success" role="alert">
            @ViewBag.GoodResult
        </div>
    }
    if (ViewBag.BadResult != null)
    {
        <div class="alert alert-danger" role="alert">
            @ViewBag.BadResult
        </div>
    }
}