@model Battleships.Domain.Concrete.Users

@{
    ViewBag.Title = "Register";
}

@if (ViewBag.SuccessfulMessage == null)
{
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <h4>Enter in your account information here.</h4>
        if (ViewBag.UserExist != null)
        {
            <div class="alert alert-danger" role="alert">
                @ViewBag.UserExist
            </div>
        }
        if (ViewBag.EmailExist != null)
        {
            <div class="alert alert-danger" role="alert">
                @ViewBag.EmailExist
            </div>
        }
        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.username, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10 input-group">
                    <span class="btn btn-default input-group-addon">
                        <span class="glyphicon glyphicon-user"></span>
                    </span>
                    @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10 input-group">
                    <span class="btn btn-default input-group-addon">
                        <span class="glyphicon glyphicon-lock"></span>
                    </span>
                    @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.confirmpassword, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10 input-group">
                    <span class="btn btn-default input-group-addon">
                        <span class="glyphicon glyphicon-lock"></span>
                    </span>
                    @Html.EditorFor(model => model.confirmpassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.confirmpassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10 input-group">
                    <span class="btn btn-default input-group-addon">
                        <span class="glyphicon glyphicon-envelope"></span>
                    </span>
                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })

                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create account" class="btn btn-default" data-toggle="modal" data-target="#Success" />
                </div>
            </div>
        </div>

    }
}
@using (Html.BeginForm())
{

    if (ViewBag.SuccessfulMessage != null)
    {
        <div class="alert alert-success" role="alert">
            @ViewBag.SuccessfulMessage
        </div>
    }
}